include /etc/nginx/mime.types;

# This is the main GeoNode / GeoServer reverse proxy configuration
charset utf-8;

# ───────────────────────────────
# Client & Proxy Settings
# ───────────────────────────────
client_max_body_size 100G;
client_body_buffer_size 256K;
client_body_timeout 600s;
large_client_header_buffers 4 64k;

proxy_connect_timeout 600;
proxy_send_timeout 600;
proxy_read_timeout 600;
uwsgi_read_timeout 600;
send_timeout 600;

fastcgi_hide_header Set-Cookie;

etag on;

# ───────────────────────────────
# Gzip Compression
# ───────────────────────────────
gzip on;
gzip_vary on;
gzip_proxied any;
gzip_http_version 1.1;
gzip_disable "MSIE [1-6]\.";
gzip_buffers 16 8k;
gzip_min_length 1100;
gzip_comp_level 6;
gzip_types
    text/css
    text/javascript
    text/xml
    text/plain
    application/xml
    application/xml+rss
    application/javascript
    application/x-javascript
    application/json;

# ───────────────────────────────
# GeoServer Reverse Proxy
# ───────────────────────────────
location /geoserver {
    # Dynamic upstream reference
    set $upstream geoserver:8080;

    proxy_set_header X-Forwarded-Host $http_host;
    proxy_set_header X-Forwarded-Server $http_host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_hide_header X-Frame-Options;

    # ─ CORS (Cross-Origin Resource Sharing)
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, Origin, User-Agent, X-Requested-With";
    add_header Access-Control-Allow-Credentials true;

    # ─ Preflight OPTIONS requests
    if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin "$http_origin" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, Origin, User-Agent, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        return 204;
    }

    proxy_pass http://$upstream;
    proxy_http_version 1.1;

    # Dynamic redirect: auto-detect scheme + port
    proxy_redirect http://$upstream $scheme://$http_host;

    proxy_request_buffering off;
    client_max_body_size 0;
}

# ───────────────────────────────
# Static Files (CSS, JS, Images)
# ───────────────────────────────
location /static/ {
    alias /mnt/volumes/statics/static/;

    location ~* \.(?:html|js|jpg|jpeg|gif|png|css|tgz|gz|rar|bz2|doc|pdf|ppt|tar|wav|bmp|ttf|rtf|swf|ico|flv|txt|woff|woff2|svg|xml)$ {
        gzip_static always;
        expires 30d;
        access_log off;
        add_header Pragma "public";
        add_header Cache-Control "max-age=31536000, public";
    }
}

# ───────────────────────────────
# Uploaded Media (User Data)
# ───────────────────────────────
location /uploaded/ {
    alias /mnt/volumes/statics/uploaded/;

    location ~* \.(?:html|js|jpg|jpeg|gif|png|css|tgz|gz|rar|bz2|doc|pdf|ppt|tar|wav|bmp|ttf|rtf|swf|ico|flv|txt|woff|woff2|svg|xml)$ {
        gzip_static always;
        expires 30d;
        access_log off;
        add_header Pragma "public";
        add_header Cache-Control "max-age=31536000, public";
    }
}

# ───────────────────────────────
# GeoNode (Django Backend)
# ───────────────────────────────
location / {
    set $upstream django:8000;

    # ─ Handle CORS preflight (OPTIONS)
    if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin "$http_origin" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        add_header Access-Control-Max-Age 1728000;
        return 204;
    }

    add_header Access-Control-Allow-Credentials false;
    add_header Access-Control-Allow-Headers "Content-Type, Accept, Authorization, Origin, User-Agent";
    add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, OPTIONS";

    # ─ Proxy Settings
    proxy_redirect off;
    proxy_set_header Host $http_host;
    proxy_set_header Origin $scheme://$http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Host $server_name;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_hide_header X-Frame-Options;
    proxy_request_buffering off;

    include /etc/nginx/uwsgi_params;
    proxy_pass http://$upstream;

    uwsgi_ignore_client_abort on;
    uwsgi_request_buffering off;

    # ─ Static Asset Optimization
    location ~* \.(?:js|jpg|jpeg|gif|png|tgz|gz|rar|bz2|doc|pdf|ppt|tar|wav|bmp|ttf|rtf|swf|ico|flv|woff|woff2|svg|xml)$ {
        gzip_static always;
        expires 30d;
        access_log off;
        add_header Pragma "public";
        add_header Cache-Control "max-age=31536000, public";
    }
}